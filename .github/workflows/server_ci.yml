name: CI

# CI
# 觸發條件
on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

# 執行一項或多項任務
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: setting timezone
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Asia/Taipei"

      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 8080 # Optional, default value is 3306. The port of host
          container port: 8080 # Optional, default value is 3306. The port of container
          character set server: "utf8" # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: "utf8_general_ci" # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: "8.0" # Optional, default value is "latest". The version of the MySQL
          mysql database: "test" # Optional, default value is "test". The specified database which will be create
          mysql user: "test_user" # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: "tester" # Required if "mysql user" exists. The password for the "mysql user"

      - name: Set up MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: "3.6.3"
          mongodb-username: supercharge
          mongodb-password: secret
          mongodb-db: supercharge

      # 建立環境
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./requirements.txt
          pip install cryptography
          pip install torchvision 
          pip install pygsheets
          pip install line-bot-sdk
          unzip utility/algorithms/report/no_previous_label_with_2_gru.zip -d utility/algorithms/report/

      # 建立測試
      - name: Run Tests
        run: |
          python test.py

    # CD
    - name: CD
      run: |
        python google_sheet.py

     uses: appleboy/ssh-action@master
     with:
       host: ${{ secrets.DEVHOST }}
       USERNAME: ${{ secrets.DEVUSERNAME }}
       KEY: ${{ secrets.DEVSSHKEY }}
       script: |
         cd Server/
         git pull ssh://koshou@koshou.com@source.developers.google.com:2022/p/batinfo-healeth/r/github_company_server
         sudo systemctl restart gunicorn.service
